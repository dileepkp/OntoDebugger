2288	if(--argc >0){
2289	err = fopen( *++argv, "w" );
2290	--argv; ++argc;
2292	flexinit( argc, argv );
2852	printstats = syntaxerror = trace = spprdflt = caseins = 0;
2853	lex_compat = C_plus_plus = backing_up_report = ddebug = fulltbl = 0;
2854	fullspd = long_align = nowarn = yymore_used = continued_action = 0;
2855	do_yylineno = yytext_is_array = in_rule = reject = do_stdinit = 0;
2856	yymore_really_used = reject_really_used = -1;
2857	interactive = csize = -1;
2858	do_yywrap = gen_line_dirs = usemecs = useecs = 1;
2859	performance_report = 0;
2860	did_outfilename = 0;
2861	prefix = "yy";
2862	yyclass = 0;
2863	use_read = use_stdout = 0;
2864	sawcmpflag = 0;
2865	action_size = 2048;
2866	action_array = (char *) allocate_array( action_size, sizeof( char ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
2867	defs1_offset = prolog_offset = action_offset = action_index = 0;
2868	action_array[0] = '\0';
2869	program_name = "Executable";
2870	if ( program_name[0] != '\0' && program_name[strlen( program_name ) - 1] == '+' ) C_plus_plus = 1;
2873	++argv;--argc;
2874	for ( --argc, ++argv; argc ; --argc, ++argv ){
2875	arg = argv[0];
2876	if ( arg[0] != '-' || arg[1] == '\0' ) break;
2878	if ( arg[1] == '-' ){
2891	for ( i = 1; arg[i] != '\0'; ++i ) switch ( arg[i] ) {
2898	interactive = 0;
2899	break;
2875	arg = argv[0];
2876	if ( arg[0] != '-' || arg[1] == '\0' ) break;
3018	num_input_files = argc;
3019	input_files = argv;
3020	set_input_file( num_input_files > 0 ? input_files[0] :   ((void *)0)   );
11611	if ( file && strcmp( file, "-" ) ){
11612	infilename = copy_string( file );
5149	for ( c1 = str; *c1; ++c1 ) ;
5151	size = (c1 - str + 1) * sizeof( char );
5152	copy = (char *) flex_alloc( size );
11635	return (void *) malloc( size );
11636	}
5153	if ( copy ==   ((void *)0)   ) flexfatal( ("dynamic memory failure in copy_string()") );
5159	for ( c2 = copy; (*c2++ = *str++) != 0; ) ;
5161	return copy;
5162	}
11613	yyin = fopen( infilename, "r" );
11614	if ( yyin ==   ((void *)0)   ) lerrsf( ("can't open %s"), file );
11630	linenum = 1;
11631	}
3025	lastccl = lastsc = lastdfa = lastnfa = 0;
3026	num_rules = num_eof_rules = default_rule = 0;
3027	numas = numsnpairs = tmpuses = 0;
3028	numecs = numeps = eps2 = num_reallocs = hshcol = dfaeql = totnst = 0;
3029	numuniq = numdup = hshsave = eofseen = datapos = dataline = 0;
3030	num_backing_up = onesp = numprots = 0;
3031	variable_trailing_context_rules = bol_needed = 0;
3032	out_linenum = linenum = sectnum = 1;
3033	firstprot = 0;
3034	lastprot = 1;
3035	set_up_initial_allocations();
3182	current_mns = 2000;
3183	firstst = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3184	lastst = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3185	finalst = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3186	transchar = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3187	trans1 = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3188	trans2 = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3189	accptnum = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3190	assoc_rule = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3191	state_type = (int *) allocate_array( current_mns, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3192	current_max_rules = 100;
3193	rule_type = (int *) allocate_array( current_max_rules, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3194	rule_linenum = (int *) allocate_array( current_max_rules, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3195	rule_useful = (int *) allocate_array( current_max_rules, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3196	current_max_scs = 40;
3197	scset = (int *) allocate_array( current_max_scs, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3198	scbol = (int *) allocate_array( current_max_scs, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3199	scxclu = (int *) allocate_array( current_max_scs, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3200	sceof = (int *) allocate_array( current_max_scs, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3201	scname = (char **) allocate_array( current_max_scs, sizeof( char * ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3202	current_maxccls = 100;
3203	cclmap = (int *) allocate_array( current_maxccls, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3204	ccllen = (int *) allocate_array( current_maxccls, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3205	cclng = (int *) allocate_array( current_maxccls, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3206	current_max_ccl_tbl_size = 500;
3207	ccltbl = (unsigned char *) allocate_array( current_max_ccl_tbl_size, sizeof( unsigned char ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3208	current_max_dfa_size = 750;
3209	current_max_xpairs = 2000;
3210	nxt = (int *) allocate_array( current_max_xpairs, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3211	chk = (int *) allocate_array( current_max_xpairs, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3212	current_max_template_xpairs = 2500;
3213	tnxt = (int *) allocate_array( current_max_template_xpairs, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3214	current_max_dfas = 1000;
3215	base = (int *) allocate_array( current_max_dfas, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3216	def = (int *) allocate_array( current_max_dfas, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3217	dfasiz = (int *) allocate_array( current_max_dfas, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3218	accsiz = (int *) allocate_array( current_max_dfas, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3219	dhash = (int *) allocate_array( current_max_dfas, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3220	dss = (int **) allocate_array( current_max_dfas, sizeof( int * ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3221	dfaacc = (union dfaacc_union *) allocate_array( current_max_dfas, sizeof( union dfaacc_union ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3222	nultrans = (int *) 0;
3223	}
3036	}
2293	readin();
3041	line_directive_out( (FILE *) 0, 1 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5286	if ( output_file ){
5289	else add_action( directive );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5290	}
3042	if ( yyparse() ){
8366	int yyparse() {
8374	int yychar1 = 0;
8377	short *yyss = yyssa;
8378	int *yyvs = yyvsa;
8380	int yystacksize = 200;
8381	int yyfree_stacks = 0;
8385	yystate = 0;
8386	yyerrstatus = 0;
8387	yynerrs = 0;
8388	yychar = -2;
8389	yyssp = yyss - 1;
8390	yyvsp = yyvs;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8505	scinstal( "INITIAL", 0 );
7619	action_define( str, lastsc );
5009	{
5011	if ( (int) strlen( defname ) > 2048 / 2 ){
5015	sprintf( buf, "#define %s %d\n", defname, value );
5016	add_action( buf );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5017	}
7620	if ( ++lastsc >= current_max_scs ) scextend();
7622	scname[lastsc] = copy_string( str );
5149	for ( c1 = str; *c1; ++c1 ) ;
5151	size = (c1 - str + 1) * sizeof( char );
5152	copy = (char *) flex_alloc( size );
11635	return (void *) malloc( size );
11636	}
5153	if ( copy ==   ((void *)0)   ) flexfatal( ("dynamic memory failure in copy_string()") );
5159	for ( c2 = copy; (*c2++ = *str++) != 0; ) ;
5161	return copy;
5162	}
7623	if ( addsym( scname[lastsc], (char *) 0, lastsc, sctbl, 101 ) ) format_pinpoint_message( ("start condition %s declared twice"), str );
7501	int hash_val = hashfunct( sym, table_size );
7578	hashval = 0;
7579	locstr = 0;
7580	while ( str[locstr] ) {
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7585	return hashval;
7586	}
7502	register struct hash_entry *sym_entry = table[hash_val];
7505	while ( sym_entry ) {
7512	new_entry = (struct hash_entry *) flex_alloc( sizeof( struct hash_entry ) );
11635	return (void *) malloc( size );
11636	}
7514	if ( new_entry ==   ((void *)0)   ) flexfatal( ("symbol table memory allocation failed") );
7520	if ( (successor = table[hash_val]) != 0 ){
7524	else new_entry->next =   ((void *)0)  ;
7530	new_entry->prev =   ((void *)0)  ;
7535	new_entry->name = sym;
7536	new_entry->str_val = str_def;
7537	new_entry->int_val = int_def;
7538	table[hash_val] = new_entry;
7539	return 0;
7540	}
7626	scset[lastsc] = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
7627	scbol[lastsc] = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
7628	scxclu[lastsc] = xcluflg;
7629	sceof[lastsc] = 0;
7630	}
8507	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10252	yy_init = 0;
10253	if ( ! yy_start ) yy_start = 1;
10255	if ( ! yyin ) yyin =   stdin  ;
10261	if ( ! yyout ) yyout =   stdout  ;
10267	if ( ! yy_current_buffer ) yy_current_buffer = yy_create_buffer( yyin, 16384 );
11470	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
11589	return (void *) malloc( size );
11590	}
11471	if ( ! b ) yy_fatal_error( "out of dynamic memory in yy_create_buffer()" );
11473	b->yy_buf_size = size;
11474	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
11589	return (void *) malloc( size );
11590	}
11475	if ( ! b->yy_ch_buf ) yy_fatal_error( "out of dynamic memory in yy_create_buffer()" );
11477	b->yy_is_our_buffer = 1;
11478	yy_init_buffer( b, file );
11494	yy_flush_buffer( b );
11501	b->yy_n_chars = 0;
11502	b->yy_ch_buf[0] = 0;
11503	b->yy_ch_buf[1] = 0;
11504	b->yy_buf_pos = &b->yy_ch_buf[0];
11505	b->yy_at_bol = 1;
11506	b->yy_buffer_status = 0;
11507	if ( b == yy_current_buffer ) yy_load_buffer_state();
11509	}
11495	b->yy_input_file = file;
11496	b->yy_fill_buffer = 1;
11497	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
11498	}
11479	return b;
11480	}
10269	yy_load_buffer_state();
11462	yy_n_chars = yy_current_buffer->yy_n_chars;
11463	yytext = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
11464	yyin = yy_current_buffer->yy_input_file;
11465	yy_hold_char = *yy_c_buf_p;
11466	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11189	int yy_amount_of_matched_text = (int) (yy_cp - yytext) - 1;
11190	*yy_cp = yy_hold_char;
11191	if ( yy_current_buffer->yy_buffer_status == 0 ){
11193	yy_n_chars = yy_current_buffer->yy_n_chars;
11194	yy_current_buffer->yy_input_file = yyin;
11195	yy_current_buffer->yy_buffer_status = 1;
11198	if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] ){
11216	else switch ( yy_get_next_buffer() ){
11257	register char *dest = yy_current_buffer->yy_ch_buf;
11258	register char *source = yytext;
11261	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] ) yy_fatal_error( "fatal flex scanner internal error--end of buffer missed" ) ;
11264	if ( yy_current_buffer->yy_fill_buffer == 0 ){
11273	number_to_move = (int) (yy_c_buf_p - yytext) - 1;
11274	for ( i = 0; i < number_to_move; ++i ) *(dest++) = *(source++);
11276	if ( yy_current_buffer->yy_buffer_status == 2 ) yy_n_chars = 0;
11280	int num_to_read = yy_current_buffer->yy_buf_size - number_to_move - 1;
11281	while ( num_to_read <= 0 ) {
11300	if ( num_to_read > 8192 ) num_to_read = 8192;
11302	if ( yy_current_buffer->yy_is_interactive ) { int c = '*', n; for ( n = 0; n < num_to_read && (c =   _IO_getc (  yyin  )  ) !=   (-1)   && c != '\n'; ++n ) (&yy_current_buffer->yy_ch_buf[number_to_move])[n] = (char) c; if ( c == '\n' ) (&yy_current_buffer->yy_ch_buf[number_to_move])[n++] = (char) c; if ( c ==   (-1)   && ferror( yyin ) ) yy_fatal_error( "input in flex scanner failed" ); yy_n_chars = n; } else
11303	if ( ((yy_n_chars = fread( (&yy_current_buffer->yy_ch_buf[number_to_move]), 1, num_to_read, yyin )) == 0) && ferror( yyin ) ) yy_fatal_error( "input in flex scanner failed" );
11322	if ( yy_n_chars == 0 ){
11333	else ret_val = 0;
11334	yy_n_chars += number_to_move;
11335	yy_current_buffer->yy_ch_buf[yy_n_chars] = 0;
11336	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = 0;
11337	yytext = &yy_current_buffer->yy_ch_buf[0];
11338	return ret_val;
11339	}
11234	yy_c_buf_p = yytext + yy_amount_of_matched_text;
11235	yy_current_state = yy_get_previous_state();
11344	yy_current_state = yy_start;
11345	yy_current_state += (yy_current_buffer->yy_at_bol);
11346	for ( yy_cp = yytext + 0; yy_cp < yy_c_buf_p; ++yy_cp ){
11360	return yy_current_state;
11361	}
11236	yy_cp = yy_c_buf_p;
11237	yy_bp = yytext + 0;
11238	goto yy_match;
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10329	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10330	return 261;
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8460	if (yyn == -32768) goto yyerrlab;
8462	yyn = -yyn;
8463	goto yyreduce;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8522	{ xcluflg = 1; ;
8523	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10341	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10342	break;
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10385	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10386	strcpy( nmstr, yytext ); return 262;;
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8528	{ scinstal( nmstr, xcluflg ); ;
7619	action_define( str, lastsc );
5009	{
5011	if ( (int) strlen( defname ) > 2048 / 2 ){
5015	sprintf( buf, "#define %s %d\n", defname, value );
5016	add_action( buf );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5017	}
7620	if ( ++lastsc >= current_max_scs ) scextend();
7622	scname[lastsc] = copy_string( str );
5149	for ( c1 = str; *c1; ++c1 ) ;
5151	size = (c1 - str + 1) * sizeof( char );
5152	copy = (char *) flex_alloc( size );
11635	return (void *) malloc( size );
11636	}
5153	if ( copy ==   ((void *)0)   ) flexfatal( ("dynamic memory failure in copy_string()") );
5159	for ( c2 = copy; (*c2++ = *str++) != 0; ) ;
5161	return copy;
5162	}
7623	if ( addsym( scname[lastsc], (char *) 0, lastsc, sctbl, 101 ) ) format_pinpoint_message( ("start condition %s declared twice"), str );
7501	int hash_val = hashfunct( sym, table_size );
7578	hashval = 0;
7579	locstr = 0;
7580	while ( str[locstr] ) {
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7585	return hashval;
7586	}
7502	register struct hash_entry *sym_entry = table[hash_val];
7505	while ( sym_entry ) {
7512	new_entry = (struct hash_entry *) flex_alloc( sizeof( struct hash_entry ) );
11635	return (void *) malloc( size );
11636	}
7514	if ( new_entry ==   ((void *)0)   ) flexfatal( ("symbol table memory allocation failed") );
7520	if ( (successor = table[hash_val]) != 0 ){
7524	else new_entry->next =   ((void *)0)  ;
7530	new_entry->prev =   ((void *)0)  ;
7535	new_entry->name = sym;
7536	new_entry->str_val = str_def;
7537	new_entry->int_val = int_def;
7538	table[hash_val] = new_entry;
7539	return 0;
7540	}
7626	scset[lastsc] = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
7627	scbol[lastsc] = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
7628	scxclu[lastsc] = xcluflg;
7629	sceof[lastsc] = 0;
7630	}
8529	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10393	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10394	add_action( yytext ); ++linenum;
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
10395	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10344	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
10345	sectnum = 2;
10346	bracelevel = 0;
10347	mark_defs1();
5293	defs1_offset = 0;
5294	action_array[action_index++] = '\0';
5295	action_offset = prolog_offset = action_index;
5296	action_array[action_index] = '\0';
5297	}
10348	line_directive_out( (FILE *) 0, 1 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5286	if ( output_file ){
5289	else add_action( directive );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5290	}
10349	yy_start = 1 + 2 *(2);
10350	return 259;
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8513	check_options();
2308	if ( lex_compat ){
2318	if ( do_yylineno ) reject_really_used = 1;
2320	if ( csize == -1 ){
2321	if ( (fulltbl || fullspd) && ! useecs ) csize = 128;
2323	else csize = 256;
2325	if ( interactive == -1 ){
2330	if ( fulltbl || fullspd ){
2342	if ( C_plus_plus && fullspd ) flexerror( ("Can't use -+ with -CF option") );
2344	if ( C_plus_plus && yytext_is_array ){
2348	if ( useecs ){
2349	ecgroup[1] = 0;
2350	for ( i = 2; i <= csize; ++i ){
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2351	ecgroup[i] = i - 1;
2352	nextecm[i - 1] = i;
2354	nextecm[csize] = 0;
2363	if ( ! use_stdout ){
2365	if ( ! did_outfilename ){
2367	if ( C_plus_plus ) suffix = "cc";
2369	else suffix = "c";
2370	sprintf( outfile_path, outfile_template, prefix, suffix );
2371	outfilename = outfile_path;
2373	prev_stdout = freopen( outfilename, "w",   stdout   );
2378	if ( prev_stdout ==   ((void *)0)   ) lerrsf( ("could not create %s"), outfilename );
2384	outfile_created = 1;
2386	if ( skelname && (skelfile = fopen( skelname, "r" )) ==   ((void *)0)   ) lerrsf( ("can't open skeleton file %s"), skelname );
2392	if ( strcmp( prefix, "yy" ) ){
2420	if ( did_outfilename ) line_directive_out(   stdout  , 0 );
2426	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
2427	}
8514	scon_stk = (int *) allocate_array( lastsc + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
8515	scon_stk_ptr = 0;
8517	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10710	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10711	++linenum; add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
10712	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10710	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10711	++linenum; add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
10712	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10695	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
10696	if ( bracelevel <= 0 ){
10697	do { *yy_cp = yy_hold_char; yy_c_buf_p = yy_cp = yy_bp + 0 - 0; yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;; } while ( 0 );
10698	{ if ( ! yy_current_buffer ) yy_current_buffer = yy_create_buffer( yyin, 16384 ); yy_current_buffer->yy_at_bol = 1; };
10699	mark_prolog();
5300	action_array[action_index++] = '\0';
5301	action_offset = action_index;
5302	action_array[action_index] = '\0';
5303	}
10700	yy_start = 1 + 2 *(1);
10704	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10733	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10734	yy_start = 1 + 2 *(6); return '<';
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10892	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10893	strcpy( nmstr, yytext ); return 262;;
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8620	{ yyval = scon_stk_ptr; ;
8621	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8647	if ( (scnum = sclookup( nmstr )) == 0 ) format_pinpoint_message( "undeclared start condition %s", nmstr );
7634	return findsym( str, sctbl, 101 )->int_val;
7563	register struct hash_entry *sym_entry = table[hashfunct( sym, table_size )];
7578	hashval = 0;
7579	locstr = 0;
7580	while ( str[locstr] ) {
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7582	hashval = (hashval << 1) + (unsigned char) str[locstr++];
7583	hashval %= hash_size;
7585	return hashval;
7586	}
7564	while ( sym_entry ) {
7566	if ( ! strcmp( sym, sym_entry->name ) ) return sym_entry;
7571	}
7635	}
8651	for ( i = 1; i <= scon_stk_ptr; ++i )
8657	if ( i > scon_stk_ptr ) scon_stk[++scon_stk_ptr] = scnum;
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10881	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10882	yy_start = 1 + 2 *(1); return '>';
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8623	{ yyval = yyvsp[-2]; ;
8624	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10811	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10812	return 264;
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8553	trlcontxt = variable_trail_rule = varlength = 0;
8554	trailcnt = headcnt = rulelen = 0;
8555	current_state_type = 0x1;
8556	previous_continued_action = continued_action;
8557	in_rule = 1;
8558	new_rule();
5939	if ( ++num_rules >= current_max_rules ){
5949	if ( num_rules > (0x2000 - 1) ) lerrif( ("too many rules (> %d)!"), (0x2000 - 1) );
5951	rule_linenum[num_rules] = linenum;
5952	rule_useful[num_rules] = 0;
5953	}
8560	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8602	if ( scon_stk_ptr > 0 ) build_eof_action();
9240	void build_eof_action() {
9244	for ( i = 1; i <= scon_stk_ptr; ++i ){
9245	if ( sceof[scon_stk[i]] ) format_pinpoint_message( "multiple <<EOF>> rules for start condition %s", scname[scon_stk[i]] );
9249	sceof[scon_stk[i]] = 1;
9250	sprintf( action_text, "case YY_STATE_EOF(%s):\n", scname[scon_stk[i]] );
9251	add_action( action_text );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
9254	line_directive_out( (FILE *) 0, 1 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5286	if ( output_file ){
5289	else add_action( directive );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5290	}
9255	--num_rules;
9256	++num_eof_rules;
9257	}
8615	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10785	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
10786	bracelevel = 0;
10787	continued_action = 0;
10788	yy_start = 1 + 2 *(12);
10789	if ( in_rule ){
10790	doing_rule_action = 1;
10791	in_rule = 0;
10792	return '\n';
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8546	{ scon_stk_ptr = yyvsp[-3]; ;
8547	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11082	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11083	add_action( yytext ); ++bracelevel;
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11084	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11102	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11103	add_action( yytext ); yy_start = 1 + 2 *(15);
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11104	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11122	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11123	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11124	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11134	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11135	add_action( yytext ); yy_start = 1 + 2 *(12);
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11136	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11086	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11087	add_action( yytext ); --bracelevel;
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11088	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11110	if ( doing_rule_action ) add_action( "\tYY_BREAK\n" );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11112	doing_rule_action = 0;
11113	yy_start = 1 + 2 *(1);
11116	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10811	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
10812	return 264;
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8640	{ yyval = scon_stk_ptr; ;
8641	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8553	trlcontxt = variable_trail_rule = varlength = 0;
8554	trailcnt = headcnt = rulelen = 0;
8555	current_state_type = 0x1;
8556	previous_continued_action = continued_action;
8557	in_rule = 1;
8558	new_rule();
5939	if ( ++num_rules >= current_max_rules ){
5949	if ( num_rules > (0x2000 - 1) ) lerrif( ("too many rules (> %d)!"), (0x2000 - 1) );
5951	rule_linenum[num_rules] = linenum;
5952	rule_useful[num_rules] = 0;
5953	}
8560	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8602	if ( scon_stk_ptr > 0 ) build_eof_action();
8606	for ( i = 1; i <= lastsc; ++i )
8607	if ( ! sceof[i] ) scon_stk[++scon_stk_ptr] = i;
8607	if ( ! sceof[i] ) scon_stk[++scon_stk_ptr] = i;
8610	if ( scon_stk_ptr == 0 ) warn( "all start conditions already have <<EOF>> rules" );
8612	else build_eof_action();
9240	void build_eof_action() {
9244	for ( i = 1; i <= scon_stk_ptr; ++i ){
9245	if ( sceof[scon_stk[i]] ) format_pinpoint_message( "multiple <<EOF>> rules for start condition %s", scname[scon_stk[i]] );
9249	sceof[scon_stk[i]] = 1;
9250	sprintf( action_text, "case YY_STATE_EOF(%s):\n", scname[scon_stk[i]] );
9251	add_action( action_text );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
9254	line_directive_out( (FILE *) 0, 1 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5286	if ( output_file ){
5289	else add_action( directive );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5290	}
9255	--num_rules;
9256	++num_eof_rules;
9257	}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
10785	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
10786	bracelevel = 0;
10787	continued_action = 0;
10788	yy_start = 1 + 2 *(12);
10789	if ( in_rule ){
10790	doing_rule_action = 1;
10791	in_rule = 0;
10792	return '\n';
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8451	yychar1 = ((unsigned)(yychar) <= 280 ? yytranslate[yychar] : 73);
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8546	{ scon_stk_ptr = yyvsp[-3]; ;
8547	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8443	yychar = yylex();
8046	if ( eofseen ) toktype =   (-1)  ;
8052	else toktype = flexscan();
10240	int flexscan() {
10248	int doing_codeblock = 0;
10251	if ( yy_init ){
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11082	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11083	add_action( yytext ); ++bracelevel;
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11084	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11102	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11103	add_action( yytext ); yy_start = 1 + 2 *(15);
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11104	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11122	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11123	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11124	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11134	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11135	add_action( yytext ); yy_start = 1 + 2 *(12);
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11136	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11094	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11095	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11096	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11090	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11091	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11092	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11086	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');
11087	add_action( yytext ); --bracelevel;
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11088	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11106	if ( yyleng > 0 ) yy_current_buffer->yy_at_bol = (yytext[yyleng - 1] == '\n');{
11107	++linenum;
11108	add_action( yytext );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11109	if ( bracelevel == 0 ){
11110	if ( doing_rule_action ) add_action( "\tYY_BREAK\n" );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
11112	doing_rule_action = 0;
11113	yy_start = 1 + 2 *(1);
11116	break;
11252	}
10273	yy_cp = yy_c_buf_p;
10274	*yy_cp = yy_hold_char;
10275	yy_bp = yy_cp;
10276	yy_current_state = yy_start;
10277	yy_current_state += (yy_current_buffer->yy_at_bol);
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10288	yy_current_state = (int) yy_def[yy_current_state];
10289	if ( yy_current_state >= 769 ) yy_c = yy_meta[(unsigned int) yy_c];
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10281	register YY_CHAR yy_c = yy_ec[((unsigned int) (unsigned char) *yy_cp)];
10282	if ( yy_accept[yy_current_state] ){
10283	yy_last_accepting_state = yy_current_state;
10284	yy_last_accepting_cpos = yy_cp;
10286	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state ) {
10292	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
10293	++yy_cp;
10295	while ( yy_base[yy_current_state] != 2716 );
10297	yy_act = yy_accept[yy_current_state];
10298	if ( yy_act == 0 ){
10299	yy_cp = yy_last_accepting_cpos;
10300	yy_current_state = yy_last_accepting_state;
10301	yy_act = yy_accept[yy_current_state];
10303	yytext = yy_bp; yyleng = (int) (yy_cp - yy_bp); yy_hold_char = *yy_cp; *yy_cp = '\0'; yy_c_buf_p = yy_cp;;
10305	switch ( yy_act ) {
11189	int yy_amount_of_matched_text = (int) (yy_cp - yytext) - 1;
11190	*yy_cp = yy_hold_char;
11191	if ( yy_current_buffer->yy_buffer_status == 0 ){
11198	if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] ){
11216	else switch ( yy_get_next_buffer() ){
11257	register char *dest = yy_current_buffer->yy_ch_buf;
11258	register char *source = yytext;
11261	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] ) yy_fatal_error( "fatal flex scanner internal error--end of buffer missed" ) ;
11264	if ( yy_current_buffer->yy_fill_buffer == 0 ){
11273	number_to_move = (int) (yy_c_buf_p - yytext) - 1;
11274	for ( i = 0; i < number_to_move; ++i ) *(dest++) = *(source++);
11276	if ( yy_current_buffer->yy_buffer_status == 2 ) yy_n_chars = 0;
11280	int num_to_read = yy_current_buffer->yy_buf_size - number_to_move - 1;
11281	while ( num_to_read <= 0 ) {
11300	if ( num_to_read > 8192 ) num_to_read = 8192;
11302	if ( yy_current_buffer->yy_is_interactive ) { int c = '*', n; for ( n = 0; n < num_to_read && (c =   _IO_getc (  yyin  )  ) !=   (-1)   && c != '\n'; ++n ) (&yy_current_buffer->yy_ch_buf[number_to_move])[n] = (char) c; if ( c == '\n' ) (&yy_current_buffer->yy_ch_buf[number_to_move])[n++] = (char) c; if ( c ==   (-1)   && ferror( yyin ) ) yy_fatal_error( "input in flex scanner failed" ); yy_n_chars = n; } else
11303	if ( ((yy_n_chars = fread( (&yy_current_buffer->yy_ch_buf[number_to_move]), 1, num_to_read, yyin )) == 0) && ferror( yyin ) ) yy_fatal_error( "input in flex scanner failed" );
11322	if ( yy_n_chars == 0 ){
11323	if ( number_to_move == 0 ){
11324	ret_val = 1;
11325	yyrestart( yyin );
11442	if ( ! yy_current_buffer ) yy_current_buffer = yy_create_buffer( yyin, 16384 );
11444	yy_init_buffer( yy_current_buffer, input_file );
11494	yy_flush_buffer( b );
11501	b->yy_n_chars = 0;
11502	b->yy_ch_buf[0] = 0;
11503	b->yy_ch_buf[1] = 0;
11504	b->yy_buf_pos = &b->yy_ch_buf[0];
11505	b->yy_at_bol = 1;
11506	b->yy_buffer_status = 0;
11507	if ( b == yy_current_buffer ) yy_load_buffer_state();
11462	yy_n_chars = yy_current_buffer->yy_n_chars;
11463	yytext = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
11464	yyin = yy_current_buffer->yy_input_file;
11465	yy_hold_char = *yy_c_buf_p;
11466	}
11509	}
11495	b->yy_input_file = file;
11496	b->yy_fill_buffer = 1;
11497	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
11498	}
11445	yy_load_buffer_state();
11462	yy_n_chars = yy_current_buffer->yy_n_chars;
11463	yytext = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
11464	yyin = yy_current_buffer->yy_input_file;
11465	yy_hold_char = *yy_c_buf_p;
11466	}
11446	}
11334	yy_n_chars += number_to_move;
11335	yy_current_buffer->yy_ch_buf[yy_n_chars] = 0;
11336	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = 0;
11337	yytext = &yy_current_buffer->yy_ch_buf[0];
11338	return ret_val;
11339	}
11219	yy_did_buffer_switch_on_eof = 0;
11220	if ( yywrap() ){
11602	if ( --num_input_files > 0 ){
11606	else return 1;
11607	}
11222	yy_c_buf_p = yytext + 0;
11223	yy_act = (166 + ((yy_start - 1) / 2) + 1);
11224	goto do_action;
10305	switch ( yy_act ) {
11186	return 0;
11253	}
8053	if ( toktype ==   (-1)   || toktype == 0 ) {
8059	eofseen = 1;
8060	if ( sectnum == 1 ){
8065	else toktype = 0;
8067	if ( trace ){
8237	return toktype;
8238	}
8445	if (yychar <= 0){
8446	yychar1 = 0;
8447	yychar = 0;
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8460	if (yyn == -32768) goto yyerrlab;
8462	yyn = -yyn;
8463	goto yyreduce;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8553	trlcontxt = variable_trail_rule = varlength = 0;
8554	trailcnt = headcnt = rulelen = 0;
8555	current_state_type = 0x1;
8556	previous_continued_action = continued_action;
8557	in_rule = 1;
8558	new_rule();
5939	if ( ++num_rules >= current_max_rules ){
5949	if ( num_rules > (0x2000 - 1) ) lerrif( ("too many rules (> %d)!"), (0x2000 - 1) );
5951	rule_linenum[num_rules] = linenum;
5952	rule_useful[num_rules] = 0;
5953	}
8560	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8478	yyn = yydefact[yystate];
8479	if (yyn == 0) goto yyerrlab;
8482	yylen = yyr2[yyn];
8483	if (yylen > 0) yyval = yyvsp[1-yylen];
8486	switch (yyn) {
8490	pat = cclinit();
3293	if ( ++lastccl >= current_maxccls ){
3300	if ( lastccl == 1 ) cclmap[lastccl] = 0;
3303	ccllen[lastccl] = 0;
3304	cclng[lastccl] = 0;
3305	return lastccl;
3306	}
8491	cclnegate( pat );
3310	cclng[cclp] = 1;
3311	}
8492	def_rule = mkstate( -pat );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5919	return lastnfa;
5920	}
8493	default_rule = num_rules;
8494	finish_rule( def_rule, 0, 0, 0 );
5692	{
5694	add_accept( mach, num_rules );
5625	if ( transchar[finalst[mach]] == (256 + 1) ) accptnum[finalst[mach]] = accepting_number;
5629	int astate = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
5630	accptnum[astate] = accepting_number;
5631	(void) link_machines( mach, astate );
5733	if ( first == 0 ) return last;
5736	if ( last == 0 ) return first;
5740	mkxtion( finalst[first], last );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5936	}
5741	finalst[first] = finalst[last];
5742	lastst[first] = ((lastst[first]) > (lastst[last]) ? (lastst[first]) : (lastst[last]));
5743	firstst[first] = ((firstst[first]) < (firstst[last]) ? (firstst[first]) : (firstst[last]));
5744	return first;
5746	}
5695	rule_linenum[num_rules] = linenum;
5696	if ( continued_action ) --rule_linenum[num_rules];
5698	sprintf( action_text, "case %d:\n", num_rules );
5699	add_action( action_text );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5700	if ( variable_trail_rule ){
5708	rule_type[num_rules] = 0;
5709	if ( headcnt > 0 || trailcnt > 0 ){
5725	if ( ! continued_action ) add_action( "YY_RULE_SETUP\n" );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5727	line_directive_out( (FILE *) 0, 1 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5286	if ( output_file ){
5289	else add_action( directive );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
5290	}
5728	}
8495	for ( i = 1; i <= lastsc; ++i ) scset[i] = mkbranch( scset[i], def_rule );
5774	if ( first == 0 ) return second;
5777	if ( second == 0 ) return first;
5779	eps = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
5780	mkxtion( eps, first );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5936	}
5781	mkxtion( eps, second );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5928	if ( (transchar[statefrom] != (256 + 1)) || (trans2[statefrom] != 0) ) flexfatal( ("found too many transitions in mkxtion()") );
5933	++eps2;
5934	trans2[statefrom] = stateto;
5782	return eps;
5783	}
5774	if ( first == 0 ) return second;
5777	if ( second == 0 ) return first;
5779	eps = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
5780	mkxtion( eps, first );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5936	}
5781	mkxtion( eps, second );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5928	if ( (transchar[statefrom] != (256 + 1)) || (trans2[statefrom] != 0) ) flexfatal( ("found too many transitions in mkxtion()") );
5933	++eps2;
5934	trans2[statefrom] = stateto;
5782	return eps;
5783	}
8497	if ( spprdflt ) add_action( "YY_FATAL_ERROR( \"flex scanner jammed\" )" );
8499	else add_action( "ECHO" );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
8500	add_action( ";\n\tYY_BREAK\n" );
5021	int len = strlen( new_text );
5022	while ( len + action_index >= action_size - 10 ) {
5030	strcpy( &action_array[action_index], new_text );
5031	action_index += len;
5032	}
8502	break;}
9172	yyvsp -= yylen;
9173	yyssp -= yylen;
9175	*++yyvsp = yyval;
9177	yyn = yyr1[yyn];
9178	yystate = yypgoto[yyn - 48] + *yyssp;
9179	if (yystate >= 0 && yystate <= 110 && yycheck[yystate] == *yyssp) yystate = yytable[yystate];
9181	else yystate = yydefgoto[yyn - 48];
9182	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8446	yychar1 = 0;
8447	yychar = 0;
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
8471	if (yychar != 0) yychar = -2;
8473	*++yyvsp = yylval;
8474	if (yyerrstatus) yyerrstatus--;
8475	yystate = yyn;
8476	goto yynewstate;
8392	*++yyssp = yystate;
8393	if (yyssp >= yyss + yystacksize - 1){
8437	goto yybackup;
8439	yyn = yypact[yystate];
8440	if (yyn == -32768) goto yydefault;
8442	if (yychar == -2){
8445	if (yychar <= 0){
8446	yychar1 = 0;
8447	yychar = 0;
8454	yyn += yychar1;
8455	if (yyn < 0 || yyn > 110 || yycheck[yyn] != yychar1) goto yydefault;
8457	yyn = yytable[yyn];
8459	if (yyn < 0){
8466	if (yyn == 0) goto yyerrlab;
8468	if (yyn == 107) goto yyacceptlab;
9228	if (yyfree_stacks){
9232	return 0;
9239	}
3046	if ( syntaxerror ) flexend( 1 );
3048	if ( backing_up_report ){
3057	else backing_up_file =   ((void *)0)  ;
3063	if ( yymore_really_used == 1 ) yymore_used = 1;
3066	if ( yymore_really_used == 0 ) yymore_used = 0;
3068	if ( reject_really_used == 1 ) reject = 1;
3071	if ( reject_really_used == 0 ) reject = 0;
3073	if ( performance_report > 0 ){
3093	if ( reject ) real_reject = 1;
3095	if ( variable_trailing_context_rules ) reject = 1;
3097	if ( (fulltbl || fullspd) && reject ){
3105	if ( reject ) outn( "\n#define YY_USES_REJECT" );
3107	if ( ! do_yywrap ){
3111	if ( ddebug ) outn( "\n#define FLEX_DEBUG" );
3113	if ( csize == 256 ) outn( "typedef unsigned char YY_CHAR;" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
3116	if ( C_plus_plus ){
3123	if ( do_stdinit ){
3134	else outn( yy_nostdinit );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
3136	if ( fullspd ) outn( "typedef yyconst struct yy_trans_info *yy_state_type;" );
3139	if ( ! C_plus_plus ) outn( "typedef int yy_state_type;" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
3141	if ( ddebug ) outn( "\n#define FLEX_DEBUG" );
3143	if ( lex_compat ) outn( "#define YY_FLEX_LEX_COMPAT" );
3145	if ( do_yylineno && ! C_plus_plus ){
3149	if ( C_plus_plus ){
3162	if ( yytext_is_array ) outn( "extern char yytext[];\n" );
3166	outn( "extern char *yytext;" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
3167	outn( "#define yytext_ptr yytext" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
3169	if ( yyclass ) flexerror( ("%option yyclass only meaningful for C++ scanners") );
3172	if ( useecs ) numecs = cre8ecs( nextecm, ecgroup, csize );
3973	numcl = 0;
3974	for ( i = 1; i <= num; ++i )
3975	if ( bck[i] == 0 ){
3977	bck[i] = ++numcl;
3978	for ( j = fwd[i]; j != 0; j = fwd[j] ) bck[j] = -numcl;
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3975	if ( bck[i] == 0 ){
3981	return numcl;
3982	}
3175	ecgroup[0] = ecgroup[csize];
3176	NUL_ec = ((ecgroup[0]) < 0 ? -(ecgroup[0]) : (ecgroup[0]));
3177	if ( useecs ) ccl2ecl();
3954	for ( i = 1; i <= lastccl; ++i ){
3955	newlen = 0;
3956	cclp = cclmap[i];
3957	for ( ccls = 0; ccls < ccllen[i]; ++ccls ){
3965	ccllen[i] = newlen;
3967	}
3179	}
2294	ntod();
3577	void ntod() {
3590	accset = (int *) allocate_array( num_rules + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3591	nset = (int *) allocate_array( current_max_dfa_size, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3592	todo_head = todo_next = 0;
3593	for ( i = 0; i <= csize; ++i ){
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3594	duplist[i] = 0;
3595	symlist[i] = 0;
3597	for ( i = 0; i <= num_rules; ++i ) accset[i] = 0;
3599	if ( trace ){
3603	inittbl();
7793	zero_out( (char *) chk, (size_t) (current_max_xpairs * sizeof( int )) );
5614	rp = region_ptr;
5615	rp_end = region_ptr + size_in_bytes;
5616	while ( rp < rp_end ) *rp++ = 0;
5618	}
7794	tblend = 0;
7795	firstfree = tblend + 1;
7796	numtemps = 0;
7797	if ( usemecs ){
7798	tecbck[1] = 0;
7799	for ( i = 2; i <= numecs; ++i ){
7803	tecfwd[numecs] = 0;
7805	}
3605	if ( ! fullspd && ecgroup[0] == numecs ){
3619	if ( fullspd ){
3626	if ( fulltbl ){
3637	num_start_states = lastsc * 2;
3638	for ( i = 1; i <= num_start_states; ++i ){
3639	numstates = 1;
3640	if ( i % 2 == 1 ) nset[numstates] = scset[(i / 2) + 1];
3643	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3526	stk = (int *) allocate_array( current_max_dfa_size, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3527	did_stk_init = 1;
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3544	if ( ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3546	tsp = trans2[ns];
3547	if ( tsp != 0 && ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3644	if ( snstods( nset, numstates, accset, nacc, hashval, &ds ) ){
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3802	if ( ++lastdfa >= current_max_dfas ) increase_max_dfas();
3804	newds = lastdfa;
3805	dss[newds] = (int *) allocate_array( numstates + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3806	if ( ! didsort ) bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5104	for ( j = 1; j < i; ++j )
5105	if ( v[j] > v[j + 1] ){
5108	k = v[j];
5109	v[j] = v[j + 1];
5110	v[j + 1] = k;
5112	}
3808	for ( i = 1; i <= numstates; ++i ) dss[newds][i] = sns[i];
3810	dfasiz[newds] = numstates;
3811	dhash[newds] = hashval;
3812	if ( nacc == 0 ){
3813	if ( reject ) dfaacc[newds].dfaacc_set = (int *) 0;
3815	else dfaacc[newds].dfaacc_state = 0;
3816	accsiz[newds] = 0;
3840	*newds_addr = newds;
3841	return 1;
3842	}
3645	numas += nacc;
3646	totnst += numstates;
3647	++todo_next;
3648	if ( variable_trailing_context_rules && nacc > 0 ) check_trailing_context( nset, numstates, accset, nacc );
3639	numstates = 1;
3640	if ( i % 2 == 1 ) nset[numstates] = scset[(i / 2) + 1];
3642	else nset[numstates] = mkbranch( scbol[i / 2], scset[i / 2] );
5774	if ( first == 0 ) return second;
5777	if ( second == 0 ) return first;
5779	eps = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
5780	mkxtion( eps, first );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5936	}
5781	mkxtion( eps, second );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5928	if ( (transchar[statefrom] != (256 + 1)) || (trans2[statefrom] != 0) ) flexfatal( ("found too many transitions in mkxtion()") );
5933	++eps2;
5934	trans2[statefrom] = stateto;
5782	return eps;
5783	}
3643	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3544	if ( ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3546	tsp = trans2[ns];
3547	if ( tsp != 0 && ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3544	if ( ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3546	tsp = trans2[ns];
3547	if ( tsp != 0 && ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3644	if ( snstods( nset, numstates, accset, nacc, hashval, &ds ) ){
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3802	if ( ++lastdfa >= current_max_dfas ) increase_max_dfas();
3804	newds = lastdfa;
3805	dss[newds] = (int *) allocate_array( numstates + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3806	if ( ! didsort ) bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5104	for ( j = 1; j < i; ++j )
5105	if ( v[j] > v[j + 1] ){
5108	k = v[j];
5109	v[j] = v[j + 1];
5110	v[j + 1] = k;
5112	}
3808	for ( i = 1; i <= numstates; ++i ) dss[newds][i] = sns[i];
3810	dfasiz[newds] = numstates;
3811	dhash[newds] = hashval;
3812	if ( nacc == 0 ){
3813	if ( reject ) dfaacc[newds].dfaacc_set = (int *) 0;
3815	else dfaacc[newds].dfaacc_state = 0;
3816	accsiz[newds] = 0;
3840	*newds_addr = newds;
3841	return 1;
3842	}
3645	numas += nacc;
3646	totnst += numstates;
3647	++todo_next;
3648	if ( variable_trailing_context_rules && nacc > 0 ) check_trailing_context( nset, numstates, accset, nacc );
3639	numstates = 1;
3640	if ( i % 2 == 1 ) nset[numstates] = scset[(i / 2) + 1];
3643	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3544	if ( ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3546	tsp = trans2[ns];
3547	if ( tsp != 0 && ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3644	if ( snstods( nset, numstates, accset, nacc, hashval, &ds ) ){
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3802	if ( ++lastdfa >= current_max_dfas ) increase_max_dfas();
3804	newds = lastdfa;
3805	dss[newds] = (int *) allocate_array( numstates + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3806	if ( ! didsort ) bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5104	for ( j = 1; j < i; ++j )
5105	if ( v[j] > v[j + 1] ){
5108	k = v[j];
5109	v[j] = v[j + 1];
5110	v[j + 1] = k;
5112	}
3808	for ( i = 1; i <= numstates; ++i ) dss[newds][i] = sns[i];
3810	dfasiz[newds] = numstates;
3811	dhash[newds] = hashval;
3812	if ( nacc == 0 ){
3813	if ( reject ) dfaacc[newds].dfaacc_set = (int *) 0;
3815	else dfaacc[newds].dfaacc_state = 0;
3816	accsiz[newds] = 0;
3840	*newds_addr = newds;
3841	return 1;
3842	}
3645	numas += nacc;
3646	totnst += numstates;
3647	++todo_next;
3648	if ( variable_trailing_context_rules && nacc > 0 ) check_trailing_context( nset, numstates, accset, nacc );
3639	numstates = 1;
3640	if ( i % 2 == 1 ) nset[numstates] = scset[(i / 2) + 1];
3642	else nset[numstates] = mkbranch( scbol[i / 2], scset[i / 2] );
5774	if ( first == 0 ) return second;
5777	if ( second == 0 ) return first;
5779	eps = mkstate( (256 + 1) );
5884	if ( ++lastnfa >= current_mns ){
5898	firstst[lastnfa] = lastnfa;
5899	finalst[lastnfa] = lastnfa;
5900	lastst[lastnfa] = lastnfa;
5901	transchar[lastnfa] = sym;
5902	trans1[lastnfa] = 0;
5903	trans2[lastnfa] = 0;
5904	accptnum[lastnfa] = 0;
5905	assoc_rule[lastnfa] = num_rules;
5906	state_type[lastnfa] = current_state_type;
5908	if ( sym < 0 ){
5911	if ( sym == (256 + 1) ) ++numeps;
5919	return lastnfa;
5920	}
5780	mkxtion( eps, first );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5936	}
5781	mkxtion( eps, second );
5925	if ( trans1[statefrom] == 0 ) trans1[statefrom] = stateto;
5928	if ( (transchar[statefrom] != (256 + 1)) || (trans2[statefrom] != 0) ) flexfatal( ("found too many transitions in mkxtion()") );
5933	++eps2;
5934	trans2[statefrom] = stateto;
5782	return eps;
5783	}
3643	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3544	if ( ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3546	tsp = trans2[ns];
3547	if ( tsp != 0 && ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3544	if ( ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3546	tsp = trans2[ns];
3547	if ( tsp != 0 && ! (trans1[tsp] < 0) ) { { if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = tsp; trans1[tsp] = trans1[tsp] - (31999 +2); } { nfaccnum = accptnum[tsp]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; } if ( nfaccnum != 0 || transchar[tsp] != (256 + 1) ) { if ( ++numstates >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } t[numstates] = tsp; hashval += tsp; } }
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3644	if ( snstods( nset, numstates, accset, nacc, hashval, &ds ) ){
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3802	if ( ++lastdfa >= current_max_dfas ) increase_max_dfas();
3804	newds = lastdfa;
3805	dss[newds] = (int *) allocate_array( numstates + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3806	if ( ! didsort ) bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5104	for ( j = 1; j < i; ++j )
5105	if ( v[j] > v[j + 1] ){
5108	k = v[j];
5109	v[j] = v[j + 1];
5110	v[j + 1] = k;
5112	}
3808	for ( i = 1; i <= numstates; ++i ) dss[newds][i] = sns[i];
3810	dfasiz[newds] = numstates;
3811	dhash[newds] = hashval;
3812	if ( nacc == 0 ){
3813	if ( reject ) dfaacc[newds].dfaacc_set = (int *) 0;
3815	else dfaacc[newds].dfaacc_state = 0;
3816	accsiz[newds] = 0;
3840	*newds_addr = newds;
3841	return 1;
3842	}
3645	numas += nacc;
3646	totnst += numstates;
3647	++todo_next;
3648	if ( variable_trailing_context_rules && nacc > 0 ) check_trailing_context( nset, numstates, accset, nacc );
3652	if ( ! fullspd ){
3653	if ( ! snstods( nset, 0, accset, 0, 0, &end_of_buffer_state ) ) flexfatal( ("could not create unique end-of-buffer state") );
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3802	if ( ++lastdfa >= current_max_dfas ) increase_max_dfas();
3804	newds = lastdfa;
3805	dss[newds] = (int *) allocate_array( numstates + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3806	if ( ! didsort ) bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5112	}
3808	for ( i = 1; i <= numstates; ++i ) dss[newds][i] = sns[i];
3810	dfasiz[newds] = numstates;
3811	dhash[newds] = hashval;
3812	if ( nacc == 0 ){
3813	if ( reject ) dfaacc[newds].dfaacc_set = (int *) 0;
3815	else dfaacc[newds].dfaacc_state = 0;
3816	accsiz[newds] = 0;
3840	*newds_addr = newds;
3841	return 1;
3842	}
3655	++numas;
3656	++num_start_states;
3657	++todo_next;
3659	while ( todo_head < todo_next ) {
3661	targptr = 0;
3662	totaltrans = 0;
3663	for ( i = 1; i <= numecs; ++i ) state[i] = 0;
3665	ds = ++todo_head;
3666	dset = dss[ds];
3667	dsize = dfasiz[ds];
3668	if ( trace ) fprintf( err, ("state # %d:\n"), ds );
3670	sympartition( dset, dsize, symlist, duplist );
3901	{
3903	for ( i = 1; i <= numecs; ++i ){
3904	duplist[i] = i - 1;
3905	dupfwd[i] = i + 1;
3907	duplist[1] = 0;
3908	dupfwd[numecs] = 0;
3909	for ( i = 1; i <= numstates; ++i ){
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3913	if ( tch < -lastccl || tch >= csize ){
3916	if ( tch >= 0 ){
3923	tch = -tch;
3924	lenccl = ccllen[tch];
3925	cclp = cclmap[tch];
3926	mkeccl( ccltbl + cclp, lenccl, dupfwd, duplist, numecs, NUL_ec );
3991	cclp = 0;
3992	while ( cclp < lenccl ) {
4031	}
3927	if ( cclng[tch] ){
3928	j = 0;
3929	for ( k = 0; k < lenccl; ++k ){
3936	for ( ++j; j <= numecs; ++j ) symlist[j] = 1;
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3949	}
3671	for ( sym = 1; sym <= numecs; ++sym ){
3672	if ( symlist[sym] ){
3673	symlist[sym] = 0;
3674	if ( duplist[sym] == 0 ){
3675	numstates = symfollowset( dset, dsize, sym, nset );
3848	numstates = 0;
3849	for ( i = 1; i <= dsize; ++i ){
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3854	sym = -sym;
3855	ccllist = cclmap[sym];
3856	lenccl = ccllen[sym];
3857	if ( cclng[sym] ){
3858	for ( j = 0; j < lenccl; ++j ){
3868	nset[++numstates] = tsp;
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3885	if ( sym >= 'A' && sym <= 'Z' && caseins ) flexfatal( ("consistency check failed in symfollowset") );
3888	if ( sym == (256 + 1) ){
3895	return numstates;
3896	}
3676	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3677	if ( snstods( nset, numstates, accset, nacc, hashval, &newds ) ) {
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3802	if ( ++lastdfa >= current_max_dfas ) increase_max_dfas();
3804	newds = lastdfa;
3805	dss[newds] = (int *) allocate_array( numstates + 1, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
3806	if ( ! didsort ) bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5112	}
3808	for ( i = 1; i <= numstates; ++i ) dss[newds][i] = sns[i];
3810	dfasiz[newds] = numstates;
3811	dhash[newds] = hashval;
3812	if ( nacc == 0 ){
3819	if ( reject ){
3831	j = num_rules + 1;
3832	for ( i = 1; i <= nacc; ++i )
3833	if ( accset[i] < j ) j = accset[i];
3836	dfaacc[newds].dfaacc_state = j;
3837	if ( j <= num_rules ) rule_useful[j] = 1;
3840	*newds_addr = newds;
3841	return 1;
3842	}
3680	totnst = totnst + numstates;
3681	++todo_next;
3682	numas += nacc;
3683	if ( variable_trailing_context_rules && nacc > 0 ) check_trailing_context( nset, numstates, accset, nacc );
3688	state[sym] = newds;
3689	if ( trace ) fprintf( err, "\t%d\t%d\n", sym, newds );
3691	targfreq[++targptr] = 1;
3692	targstate[targptr] = newds;
3693	++numuniq;
3707	++totaltrans;
3708	duplist[sym] = 0;
3711	if ( caseins && ! useecs ){
3722	numsnpairs += totaltrans;
3723	if ( ds > num_start_states ) check_for_backing_up( ds, state );
3725	if ( nultrans ){
3729	if ( fulltbl ){
3740	if ( fullspd ) place_state( state, ds, totaltrans );
3743	if ( ds == end_of_buffer_state ) stack1( ds, 0, 0, -32766 );
3747	comfreq = 0;
3748	comstate = 0;
3749	for ( i = 1; i <= targptr; ++i )
3750	if ( targfreq[i] > comfreq ){
3752	comfreq = targfreq[i];
3753	comstate = targstate[i];
3755	bldtbl( state, ds, totaltrans, comstate, comfreq );
7645	{
7649	extptr = 0;
7650	if ( (totaltrans * 100) < (numecs * 15) ) mkentry( state, numecs, statenum, -32766, totaltrans );
7654	int checkcom = comfreq * 100 > totaltrans * 50;
7655	minprot = firstprot;
7656	mindiff = totaltrans;
7657	if ( checkcom ){
7658	for ( i = firstprot; i != 0; i = protnext[i] )
7674	if ( mindiff * 100 > totaltrans * 10 ){
7675	for ( i = minprot; i != 0; i = protnext[i] ){
7684	if ( mindiff * 100 > totaltrans * 50 ){
7685	if ( comfreq * 100 >= totaltrans * 60 ) mktemplate( state, statenum, comstate );
7944	{
7948	++numtemps;
7949	tsptr = 0;
7950	tmpbase = numtemps * numecs;
7951	if ( tmpbase + numecs >= current_max_template_xpairs ){
7957	for ( i = 1; i <= numecs; ++i )
7958	if ( state[i] == 0 ) tnxt[tmpbase + i] = 0;
7963	transset[tsptr++] = i;
7964	tnxt[tmpbase + i] = comstate;
7966	if ( usemecs ) mkeccl( transset, tsptr, tecfwd, tecbck, numecs, 0 );
3991	cclp = 0;
3992	while ( cclp < lenccl ) {
3994	cclm = ccls[cclp];
3995	if ( NUL_mapping && cclm == 0 ) cclm = NUL_mapping;
3997	oldec = bck[cclm];
3998	newec = cclm;
3999	j = cclp + 1;
4000	for ( i = fwd[cclm]; i != 0 && i <= llsiz; i = fwd[i] ){
4022	if ( bck[cclm] != 0 || oldec != bck[cclm] ){
4026	fwd[newec] = 0;
4027	for ( ++cclp; cclflags[cclp] && cclp < lenccl; ++cclp ){
4031	}
7968	mkprot( tnxt + tmpbase, -numtemps, comstate );
7926	if ( ++numprots >= 50 || numecs * numprots >= 2000 ){
7931	else slot = numprots;
7932	protnext[slot] = firstprot;
7933	if ( firstprot != 0 ) protprev[firstprot] = slot;
7935	firstprot = slot;
7936	prottbl[slot] = statenum;
7937	protcomst[slot] = comstate;
7938	tblbase = numecs * (slot - 1);
7939	for ( i = 1; i <= numecs; ++i ) protsave[tblbase + i] = state[i];
7941	}
7969	numdiff = tbldiff( state, firstprot, tmp );
8026	register int i, *sp = state, *ep = ext, *protp;
8027	register int numdiff = 0;
8028	protp = &protsave[numecs * (pr - 1)];
8029	for ( i = numecs; i > 0; --i ){
8030	if ( *++protp == *++sp ) *++ep = -1;
8038	return numdiff;
8039	}
7970	mkentry( tmp, numecs, statenum, -numtemps, numdiff );
7832	if ( totaltrans == 0 ){
7833	if ( deflink == -32766 ) base[statenum] = -32766;
7835	else base[statenum] = 0;
7836	def[statenum] = deflink;
7837	return;
7902	}
7971	}
3661	targptr = 0;
3662	totaltrans = 0;
3663	for ( i = 1; i <= numecs; ++i ) state[i] = 0;
3665	ds = ++todo_head;
3666	dset = dss[ds];
3667	dsize = dfasiz[ds];
3668	if ( trace ) fprintf( err, ("state # %d:\n"), ds );
3670	sympartition( dset, dsize, symlist, duplist );
3901	{
3903	for ( i = 1; i <= numecs; ++i ){
3904	duplist[i] = i - 1;
3905	dupfwd[i] = i + 1;
3907	duplist[1] = 0;
3908	dupfwd[numecs] = 0;
3909	for ( i = 1; i <= numstates; ++i ){
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3913	if ( tch < -lastccl || tch >= csize ){
3916	if ( tch >= 0 ){
3923	tch = -tch;
3924	lenccl = ccllen[tch];
3925	cclp = cclmap[tch];
3926	mkeccl( ccltbl + cclp, lenccl, dupfwd, duplist, numecs, NUL_ec );
3991	cclp = 0;
3992	while ( cclp < lenccl ) {
4031	}
3927	if ( cclng[tch] ){
3928	j = 0;
3929	for ( k = 0; k < lenccl; ++k ){
3936	for ( ++j; j <= numecs; ++j ) symlist[j] = 1;
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3949	}
3671	for ( sym = 1; sym <= numecs; ++sym ){
3672	if ( symlist[sym] ){
3673	symlist[sym] = 0;
3674	if ( duplist[sym] == 0 ){
3675	numstates = symfollowset( dset, dsize, sym, nset );
3848	numstates = 0;
3849	for ( i = 1; i <= dsize; ++i ){
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3854	sym = -sym;
3855	ccllist = cclmap[sym];
3856	lenccl = ccllen[sym];
3857	if ( cclng[sym] ){
3858	for ( j = 0; j < lenccl; ++j ){
3868	nset[++numstates] = tsp;
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3885	if ( sym >= 'A' && sym <= 'Z' && caseins ) flexfatal( ("consistency check failed in symfollowset") );
3888	if ( sym == (256 + 1) ){
3895	return numstates;
3896	}
3676	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3677	if ( snstods( nset, numstates, accset, nacc, hashval, &newds ) ) {
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3783	if ( numstates == dfasiz[i] ){
3784	oldsns = dss[i];
3785	if ( ! didsort ){
3786	bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5112	}
3787	didsort = 1;
3789	for ( j = 1; j <= numstates; ++j )
3790	if ( sns[j] != oldsns[j] ) break;
3793	if ( j > numstates ){
3794	++dfaeql;
3795	*newds_addr = i;
3796	return 0;
3842	}
3688	state[sym] = newds;
3689	if ( trace ) fprintf( err, "\t%d\t%d\n", sym, newds );
3691	targfreq[++targptr] = 1;
3692	targstate[targptr] = newds;
3693	++numuniq;
3707	++totaltrans;
3708	duplist[sym] = 0;
3711	if ( caseins && ! useecs ){
3722	numsnpairs += totaltrans;
3723	if ( ds > num_start_states ) check_for_backing_up( ds, state );
3725	if ( nultrans ){
3729	if ( fulltbl ){
3740	if ( fullspd ) place_state( state, ds, totaltrans );
3743	if ( ds == end_of_buffer_state ) stack1( ds, 0, 0, -32766 );
3747	comfreq = 0;
3748	comstate = 0;
3749	for ( i = 1; i <= targptr; ++i )
3750	if ( targfreq[i] > comfreq ){
3752	comfreq = targfreq[i];
3753	comstate = targstate[i];
3755	bldtbl( state, ds, totaltrans, comstate, comfreq );
7645	{
7649	extptr = 0;
7650	if ( (totaltrans * 100) < (numecs * 15) ) mkentry( state, numecs, statenum, -32766, totaltrans );
7654	int checkcom = comfreq * 100 > totaltrans * 50;
7655	minprot = firstprot;
7656	mindiff = totaltrans;
7657	if ( checkcom ){
7658	for ( i = firstprot; i != 0; i = protnext[i] )
7659	if ( protcomst[i] == comstate ){
7661	minprot = i;
7662	mindiff = tbldiff( state, minprot, extrct[extptr] );
8026	register int i, *sp = state, *ep = ext, *protp;
8027	register int numdiff = 0;
8028	protp = &protsave[numecs * (pr - 1)];
8029	for ( i = numecs; i > 0; --i ){
8030	if ( *++protp == *++sp ) *++ep = -1;
8038	return numdiff;
8039	}
7663	break;
7674	if ( mindiff * 100 > totaltrans * 10 ){
7684	if ( mindiff * 100 > totaltrans * 50 ){
7696	mkentry( extrct[extptr], numecs, statenum, prottbl[minprot], mindiff );
7832	if ( totaltrans == 0 ){
7833	if ( deflink == -32766 ) base[statenum] = -32766;
7835	else base[statenum] = 0;
7836	def[statenum] = deflink;
7837	return;
7902	}
7697	if ( mindiff * 100 >= totaltrans * 20 ) mkprot( state, statenum, comstate );
7701	mv2front( minprot );
7975	if ( firstprot != qelm ){
7986	}
3661	targptr = 0;
3662	totaltrans = 0;
3663	for ( i = 1; i <= numecs; ++i ) state[i] = 0;
3665	ds = ++todo_head;
3666	dset = dss[ds];
3667	dsize = dfasiz[ds];
3668	if ( trace ) fprintf( err, ("state # %d:\n"), ds );
3670	sympartition( dset, dsize, symlist, duplist );
3901	{
3903	for ( i = 1; i <= numecs; ++i ){
3904	duplist[i] = i - 1;
3905	dupfwd[i] = i + 1;
3907	duplist[1] = 0;
3908	dupfwd[numecs] = 0;
3909	for ( i = 1; i <= numstates; ++i ){
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3913	if ( tch < -lastccl || tch >= csize ){
3916	if ( tch >= 0 ){
3923	tch = -tch;
3924	lenccl = ccllen[tch];
3925	cclp = cclmap[tch];
3926	mkeccl( ccltbl + cclp, lenccl, dupfwd, duplist, numecs, NUL_ec );
3991	cclp = 0;
3992	while ( cclp < lenccl ) {
4031	}
3927	if ( cclng[tch] ){
3928	j = 0;
3929	for ( k = 0; k < lenccl; ++k ){
3936	for ( ++j; j <= numecs; ++j ) symlist[j] = 1;
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3949	}
3671	for ( sym = 1; sym <= numecs; ++sym ){
3672	if ( symlist[sym] ){
3673	symlist[sym] = 0;
3674	if ( duplist[sym] == 0 ){
3675	numstates = symfollowset( dset, dsize, sym, nset );
3848	numstates = 0;
3849	for ( i = 1; i <= dsize; ++i ){
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3854	sym = -sym;
3855	ccllist = cclmap[sym];
3856	lenccl = ccllen[sym];
3857	if ( cclng[sym] ){
3858	for ( j = 0; j < lenccl; ++j ){
3868	nset[++numstates] = tsp;
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3885	if ( sym >= 'A' && sym <= 'Z' && caseins ) flexfatal( ("consistency check failed in symfollowset") );
3888	if ( sym == (256 + 1) ){
3895	return numstates;
3896	}
3676	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3677	if ( snstods( nset, numstates, accset, nacc, hashval, &newds ) ) {
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3783	if ( numstates == dfasiz[i] ){
3784	oldsns = dss[i];
3785	if ( ! didsort ){
3786	bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5112	}
3787	didsort = 1;
3789	for ( j = 1; j <= numstates; ++j )
3790	if ( sns[j] != oldsns[j] ) break;
3793	if ( j > numstates ){
3794	++dfaeql;
3795	*newds_addr = i;
3796	return 0;
3842	}
3688	state[sym] = newds;
3689	if ( trace ) fprintf( err, "\t%d\t%d\n", sym, newds );
3691	targfreq[++targptr] = 1;
3692	targstate[targptr] = newds;
3693	++numuniq;
3707	++totaltrans;
3708	duplist[sym] = 0;
3711	if ( caseins && ! useecs ){
3722	numsnpairs += totaltrans;
3723	if ( ds > num_start_states ) check_for_backing_up( ds, state );
3725	if ( nultrans ){
3729	if ( fulltbl ){
3740	if ( fullspd ) place_state( state, ds, totaltrans );
3743	if ( ds == end_of_buffer_state ) stack1( ds, 0, 0, -32766 );
3747	comfreq = 0;
3748	comstate = 0;
3749	for ( i = 1; i <= targptr; ++i )
3750	if ( targfreq[i] > comfreq ){
3752	comfreq = targfreq[i];
3753	comstate = targstate[i];
3755	bldtbl( state, ds, totaltrans, comstate, comfreq );
7645	{
7649	extptr = 0;
7650	if ( (totaltrans * 100) < (numecs * 15) ) mkentry( state, numecs, statenum, -32766, totaltrans );
7654	int checkcom = comfreq * 100 > totaltrans * 50;
7655	minprot = firstprot;
7656	mindiff = totaltrans;
7657	if ( checkcom ){
7658	for ( i = firstprot; i != 0; i = protnext[i] )
7659	if ( protcomst[i] == comstate ){
7661	minprot = i;
7662	mindiff = tbldiff( state, minprot, extrct[extptr] );
8026	register int i, *sp = state, *ep = ext, *protp;
8027	register int numdiff = 0;
8028	protp = &protsave[numecs * (pr - 1)];
8029	for ( i = numecs; i > 0; --i ){
8030	if ( *++protp == *++sp ) *++ep = -1;
8038	return numdiff;
8039	}
7663	break;
7674	if ( mindiff * 100 > totaltrans * 10 ){
7684	if ( mindiff * 100 > totaltrans * 50 ){
7696	mkentry( extrct[extptr], numecs, statenum, prottbl[minprot], mindiff );
7832	if ( totaltrans == 0 ){
7833	if ( deflink == -32766 ) base[statenum] = -32766;
7835	else base[statenum] = 0;
7836	def[statenum] = deflink;
7837	return;
7902	}
7697	if ( mindiff * 100 >= totaltrans * 20 ) mkprot( state, statenum, comstate );
7701	mv2front( minprot );
7975	if ( firstprot != qelm ){
7986	}
3661	targptr = 0;
3662	totaltrans = 0;
3663	for ( i = 1; i <= numecs; ++i ) state[i] = 0;
3665	ds = ++todo_head;
3666	dset = dss[ds];
3667	dsize = dfasiz[ds];
3668	if ( trace ) fprintf( err, ("state # %d:\n"), ds );
3670	sympartition( dset, dsize, symlist, duplist );
3901	{
3903	for ( i = 1; i <= numecs; ++i ){
3904	duplist[i] = i - 1;
3905	dupfwd[i] = i + 1;
3907	duplist[1] = 0;
3908	dupfwd[numecs] = 0;
3909	for ( i = 1; i <= numstates; ++i ){
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3913	if ( tch < -lastccl || tch >= csize ){
3916	if ( tch >= 0 ){
3923	tch = -tch;
3924	lenccl = ccllen[tch];
3925	cclp = cclmap[tch];
3926	mkeccl( ccltbl + cclp, lenccl, dupfwd, duplist, numecs, NUL_ec );
3991	cclp = 0;
3992	while ( cclp < lenccl ) {
4031	}
3927	if ( cclng[tch] ){
3928	j = 0;
3929	for ( k = 0; k < lenccl; ++k ){
3936	for ( ++j; j <= numecs; ++j ) symlist[j] = 1;
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3949	}
3671	for ( sym = 1; sym <= numecs; ++sym ){
3672	if ( symlist[sym] ){
3673	symlist[sym] = 0;
3674	if ( duplist[sym] == 0 ){
3675	numstates = symfollowset( dset, dsize, sym, nset );
3848	numstates = 0;
3849	for ( i = 1; i <= dsize; ++i ){
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3854	sym = -sym;
3855	ccllist = cclmap[sym];
3856	lenccl = ccllen[sym];
3857	if ( cclng[sym] ){
3858	for ( j = 0; j < lenccl; ++j ){
3868	nset[++numstates] = tsp;
3850	ns = ds[i];
3851	sym = transchar[ns];
3852	tsp = trans1[ns];
3853	if ( sym < 0 ){
3885	if ( sym >= 'A' && sym <= 'Z' && caseins ) flexfatal( ("consistency check failed in symfollowset") );
3888	if ( sym == (256 + 1) ){
3895	return numstates;
3896	}
3676	nset = epsclosure( nset, &numstates, accset, &nacc, &hashval );
3521	int numstates = *ns_addr, nacc, hashval, transsym, nfaccnum;
3525	if ( ! did_stk_init ){
3529	nacc = stkend = hashval = 0;
3530	for ( nstate = 1; nstate <= numstates; ++nstate ){
3531	ns = t[nstate];
3532	if ( ! (trans1[ns] < 0) ){
3533	{ if ( ++stkend >= current_max_dfa_size ) { current_max_dfa_size += 750; ++num_reallocs; t = (int *) reallocate_array( (void *) t, current_max_dfa_size, sizeof( int ) ); stk = (int *) reallocate_array( (void *) stk, current_max_dfa_size, sizeof( int ) ); } stk[stkend] = ns; trans1[ns] = trans1[ns] - (31999 +2); }
3534	{ nfaccnum = accptnum[ns]; if ( nfaccnum != 0 ) accset[++nacc] = nfaccnum; }
3535	hashval += ns;
3538	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3539	ns = stk[stkpos];
3540	transsym = transchar[ns];
3541	if ( transsym == (256 + 1) ){
3542	tsp = trans1[ns] + (31999 +2);
3543	if ( tsp != 0 ){
3552	for ( stkpos = 1; stkpos <= stkend; ++stkpos ){
3553	if ( (trans1[stk[stkpos]] < 0) ) trans1[stk[stkpos]] = trans1[stk[stkpos]] + (31999 +2);
3557	*ns_addr = numstates;
3558	*hv_addr = hashval;
3559	*nacc_addr = nacc;
3560	return t;
3561	}
3677	if ( snstods( nset, numstates, accset, nacc, hashval, &newds ) ) {
3777	int didsort = 0;
3780	for ( i = 1; i <= lastdfa; ++i )
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3781	if ( hashval == dhash[i] ){
3783	if ( numstates == dfasiz[i] ){
3784	oldsns = dss[i];
3785	if ( ! didsort ){
3786	bubble( sns, numstates );
5103	for ( i = n; i > 1; --i )
5112	}
3787	didsort = 1;
3789	for ( j = 1; j <= numstates; ++j )
3790	if ( sns[j] != oldsns[j] ) break;
3793	if ( j > numstates ){
3794	++dfaeql;
3795	*newds_addr = i;
3796	return 0;
3842	}
3688	state[sym] = newds;
3689	if ( trace ) fprintf( err, "\t%d\t%d\n", sym, newds );
3691	targfreq[++targptr] = 1;
3692	targstate[targptr] = newds;
3693	++numuniq;
3707	++totaltrans;
3708	duplist[sym] = 0;
3711	if ( caseins && ! useecs ){
3722	numsnpairs += totaltrans;
3723	if ( ds > num_start_states ) check_for_backing_up( ds, state );
3725	if ( nultrans ){
3729	if ( fulltbl ){
3740	if ( fullspd ) place_state( state, ds, totaltrans );
3743	if ( ds == end_of_buffer_state ) stack1( ds, 0, 0, -32766 );
3747	comfreq = 0;
3748	comstate = 0;
3749	for ( i = 1; i <= targptr; ++i )
3750	if ( targfreq[i] > comfreq ){
3752	comfreq = targfreq[i];
3753	comstate = targstate[i];
3755	bldtbl( state, ds, totaltrans, comstate, comfreq );
7645	{
7649	extptr = 0;
7650	if ( (totaltrans * 100) < (numecs * 15) ) mkentry( state, numecs, statenum, -32766, totaltrans );
7654	int checkcom = comfreq * 100 > totaltrans * 50;
7655	minprot = firstprot;
7656	mindiff = totaltrans;
7657	if ( checkcom ){
7658	for ( i = firstprot; i != 0; i = protnext[i] )
7659	if ( protcomst[i] == comstate ){
7661	minprot = i;
7662	mindiff = tbldiff( state, minprot, extrct[extptr] );
8026	register int i, *sp = state, *ep = ext, *protp;
8027	register int numdiff = 0;
8028	protp = &protsave[numecs * (pr - 1)];
8029	for ( i = numecs; i > 0; --i ){
8030	if ( *++protp == *++sp ) *++ep = -1;
8038	return numdiff;
8039	}
7663	break;
7674	if ( mindiff * 100 > totaltrans * 10 ){
7684	if ( mindiff * 100 > totaltrans * 50 ){
7696	mkentry( extrct[extptr], numecs, statenum, prottbl[minprot], mindiff );
7832	if ( totaltrans == 0 ){
7833	if ( deflink == -32766 ) base[statenum] = -32766;
7835	else base[statenum] = 0;
7836	def[statenum] = deflink;
7837	return;
7902	}
7697	if ( mindiff * 100 >= totaltrans * 20 ) mkprot( state, statenum, comstate );
7701	mv2front( minprot );
7975	if ( firstprot != qelm ){
7986	}
3661	targptr = 0;
3662	totaltrans = 0;
3663	for ( i = 1; i <= numecs; ++i ) state[i] = 0;
3665	ds = ++todo_head;
3666	dset = dss[ds];
3667	dsize = dfasiz[ds];
3668	if ( trace ) fprintf( err, ("state # %d:\n"), ds );
3670	sympartition( dset, dsize, symlist, duplist );
3901	{
3903	for ( i = 1; i <= numecs; ++i ){
3904	duplist[i] = i - 1;
3905	dupfwd[i] = i + 1;
3907	duplist[1] = 0;
3908	dupfwd[numecs] = 0;
3909	for ( i = 1; i <= numstates; ++i ){
3949	}
3671	for ( sym = 1; sym <= numecs; ++sym ){
3672	if ( symlist[sym] ){
3711	if ( caseins && ! useecs ){
3722	numsnpairs += totaltrans;
3723	if ( ds > num_start_states ) check_for_backing_up( ds, state );
3725	if ( nultrans ){
3729	if ( fulltbl ){
3740	if ( fullspd ) place_state( state, ds, totaltrans );
3743	if ( ds == end_of_buffer_state ) stack1( ds, 0, 0, -32766 );
8011	if ( onesp >= 500 - 1 ) mk1tbl( statenum, sym, nextstate, deflink );
8015	++onesp;
8016	onestate[onesp] = statenum;
8017	onesym[onesp] = sym;
8018	onenext[onesp] = nextstate;
8019	onedef[onesp] = deflink;
3661	targptr = 0;
3662	totaltrans = 0;
3663	for ( i = 1; i <= numecs; ++i ) state[i] = 0;
3665	ds = ++todo_head;
3666	dset = dss[ds];
3667	dsize = dfasiz[ds];
3668	if ( trace ) fprintf( err, ("state # %d:\n"), ds );
3670	sympartition( dset, dsize, symlist, duplist );
3901	{
3903	for ( i = 1; i <= numecs; ++i ){
3904	duplist[i] = i - 1;
3905	dupfwd[i] = i + 1;
3907	duplist[1] = 0;
3908	dupfwd[numecs] = 0;
3909	for ( i = 1; i <= numstates; ++i ){
3910	ns = ds[i];
3911	tch = transchar[ns];
3912	if ( tch != (256 + 1) ){
3949	}
3671	for ( sym = 1; sym <= numecs; ++sym ){
3672	if ( symlist[sym] ){
3711	if ( caseins && ! useecs ){
3722	numsnpairs += totaltrans;
3723	if ( ds > num_start_states ) check_for_backing_up( ds, state );
3387	if ( (reject && ! dfaacc[ds].dfaacc_set) || (! reject && ! dfaacc[ds].dfaacc_state) ) {
3409	}
3725	if ( nultrans ){
3729	if ( fulltbl ){
3740	if ( fullspd ) place_state( state, ds, totaltrans );
3743	if ( ds == end_of_buffer_state ) stack1( ds, 0, 0, -32766 );
3747	comfreq = 0;
3748	comstate = 0;
3749	for ( i = 1; i <= targptr; ++i )
3755	bldtbl( state, ds, totaltrans, comstate, comfreq );
7645	{
7649	extptr = 0;
7650	if ( (totaltrans * 100) < (numecs * 15) ) mkentry( state, numecs, statenum, -32766, totaltrans );
7832	if ( totaltrans == 0 ){
7833	if ( deflink == -32766 ) base[statenum] = -32766;
7836	def[statenum] = deflink;
7837	return;
7902	}
7704	}
3758	if ( fulltbl ) dataend();
3761	if ( ! fullspd ){
3762	cmptmps();
7706	void cmptmps() {
7709	register int *tmp = tmpstorage, i, j;
7711	peakpairs = numtemps * numecs + tblend;
7712	if ( usemecs ){
7713	nummecs = cre8ecs( tecfwd, tecbck, numecs );
3973	numcl = 0;
3974	for ( i = 1; i <= num; ++i )
3975	if ( bck[i] == 0 ){
3977	bck[i] = ++numcl;
3978	for ( j = fwd[i]; j != 0; j = fwd[j] ) bck[j] = -numcl;
3981	return numcl;
3982	}
7718	for ( i = 1; i <= numtemps; ++i ){
7719	totaltrans = 0;
7720	for ( j = 1; j <= numecs; ++j ){
7721	trans = tnxt[numecs * i + j];
7722	if ( usemecs ){
7723	if ( tecbck[j] > 0 ){
7724	tmp[tecbck[j]] = trans;
7725	if ( trans > 0 ) ++totaltrans;
7737	mkentry( tmp, nummecs, lastdfa + i + 1, -32766, totaltrans );
7832	if ( totaltrans == 0 ){
7839	for ( minec = 1; minec <= numchars; ++minec ){
7840	if ( state[minec] != -1 )
7841	if ( state[minec] != 0 || deflink != -32766 ) break;
7845	if ( totaltrans == 1 ){
7846	stack1( statenum, minec, state[minec], deflink );
8011	if ( onesp >= 500 - 1 ) mk1tbl( statenum, sym, nextstate, deflink );
8015	++onesp;
8016	onestate[onesp] = statenum;
8017	onesym[onesp] = sym;
8018	onenext[onesp] = nextstate;
8019	onedef[onesp] = deflink;
7847	return;
7902	}
7739	}
3763	while ( onesp > 0 ) {
3765	mk1tbl( onestate[onesp], onesym[onesp], onenext[onesp], onedef[onesp] );
7906	if ( firstfree < sym ) firstfree = sym;
7912	base[state] = firstfree - sym;
7913	def[state] = onedef;
7914	chk[firstfree] = state;
7915	nxt[firstfree] = onenxt;
7916	if ( firstfree > tblend ){
7917	tblend = firstfree++;
7918	if ( firstfree >= current_max_xpairs ) expand_nxt_chk();
7921	}
3766	--onesp;
3765	mk1tbl( onestate[onesp], onesym[onesp], onenext[onesp], onedef[onesp] );
7906	if ( firstfree < sym ) firstfree = sym;
7912	base[state] = firstfree - sym;
7913	def[state] = onedef;
7914	chk[firstfree] = state;
7915	nxt[firstfree] = onenxt;
7916	if ( firstfree > tblend ){
7917	tblend = firstfree++;
7918	if ( firstfree >= current_max_xpairs ) expand_nxt_chk();
7921	}
3766	--onesp;
3768	mkdeftbl();
7809	jamstate = lastdfa + 1;
7810	++tblend;
7811	while ( tblend + numecs >= current_max_xpairs ) expand_nxt_chk();
7813	nxt[tblend] = end_of_buffer_state;
7814	chk[tblend] = jamstate;
7815	for ( i = 1; i <= numecs; ++i ){
7816	nxt[tblend + i] = 0;
7817	chk[tblend + i] = jamstate;
7819	jambase = tblend;
7820	base[jamstate] = jambase;
7821	def[jamstate] = 0;
7822	tblend += numecs;
7823	++numtemps;
7824	}
3770	flex_free( (void *) accset );
11646	if ( ptr ) free( ptr );
11648	}
3771	flex_free( (void *) nset );
11646	if ( ptr ) free( ptr );
11648	}
3772	}
2295	for ( i = 1; i <= num_rules; ++i )
2296	if ( ! rule_useful[i] && i != default_rule ) line_warning( ("rule cannot be matched"), rule_linenum[i] );
2299	if ( spprdflt && ! reject && rule_useful[default_rule] ) line_warning( ("-s option given but default rule can be matched"), rule_linenum[default_rule] );
2301	make_tables();
4629	int did_eof_rule = 0;
4630	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4631	indent_level = 1;
4632	if ( yymore_used ){
4636	else indent_puts( "yyleng = (int) (yy_cp - yy_bp); \\" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4637	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4638	if ( yytext_is_array ){
4656	indent_level = 0;
4657	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4658	out_dec( "#define YY_NUM_RULES %d\n", num_rules );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
4659	out_dec( "#define YY_END_OF_BUFFER %d\n", num_rules + 1 );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
4660	if ( fullspd ){
4675	if ( fullspd ) genctbl();
4678	if ( fulltbl ) genftbl();
4680	else gentabs();
4482	void gentabs() {
4485	int end_of_buffer_action = num_rules + 1;
4486	acc_array = (int *) allocate_array( current_max_dfas, sizeof( int ) );
5038	size_t num_bytes = element_size * size;
5039	mem = flex_alloc( num_bytes );
11635	return (void *) malloc( size );
11636	}
5040	if ( ! mem ) flexfatal( ("memory allocation failed in allocate_array()") );
5042	return mem;
5043	}
4487	nummt = 0;
4488	++num_backing_up;
4489	if ( reject ){
4541	dfaacc[end_of_buffer_state].dfaacc_state = end_of_buffer_action;
4542	for ( i = 1; i <= lastdfa; ++i ) acc_array[i] = dfaacc[i].dfaacc_state;
4544	acc_array[i] = 0;
4547	k = lastdfa + 2;
4548	if ( reject ) ++k;
4550	out_str_dec( long_align ? C_long_decl : C_short_decl, "yy_accept", k );
5482	printf( fmt, str, n );
5483	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5484	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5485	}
4551	for ( i = 1; i <= lastdfa; ++i ){
4552	mkdata( acc_array[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4553	if ( ! reject && trace && acc_array[i] ) fprintf( err, ("state # %d accepts: [%d]\n"), i, acc_array[i] );
4552	mkdata( acc_array[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4553	if ( ! reject && trace && acc_array[i] ) fprintf( err, ("state # %d accepts: [%d]\n"), i, acc_array[i] );
4552	mkdata( acc_array[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4553	if ( ! reject && trace && acc_array[i] ) fprintf( err, ("state # %d accepts: [%d]\n"), i, acc_array[i] );
4552	mkdata( acc_array[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4553	if ( ! reject && trace && acc_array[i] ) fprintf( err, ("state # %d accepts: [%d]\n"), i, acc_array[i] );
4552	mkdata( acc_array[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4553	if ( ! reject && trace && acc_array[i] ) fprintf( err, ("state # %d accepts: [%d]\n"), i, acc_array[i] );
4552	mkdata( acc_array[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4553	if ( ! reject && trace && acc_array[i] ) fprintf( err, ("state # %d accepts: [%d]\n"), i, acc_array[i] );
4556	mkdata( acc_array[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4557	if ( reject ) mkdata( acc_array[i] );
4559	dataend();
5204	if ( datapos > 0 ) dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5206	outn( "    } ;\n" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5207	dataline = 0;
5208	datapos = 0;
5209	}
4560	if ( useecs ) genecs();
4146	out_str_dec( C_int_decl, "yy_ec", csize );
5482	printf( fmt, str, n );
5483	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5484	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5485	}
4147	for ( i = 1; i < csize; ++i ){
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5214	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5215	dataline = 0;
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5214	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5215	dataline = 0;
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5321	outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5322	dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4148	if ( caseins && (i >= 'A') && (i <= 'Z') ) ecgroup[i] = ecgroup[clower( i )];
4150	ecgroup[i] = ((ecgroup[i]) < 0 ? -(ecgroup[i]) : (ecgroup[i]));
4151	mkdata( ecgroup[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4153	dataend();
5204	if ( datapos > 0 ) dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5206	outn( "    } ;\n" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5207	dataline = 0;
5208	datapos = 0;
5209	}
4154	if ( trace ){
4187	}
4562	if ( usemecs ){
4563	if ( trace ) fputs( ("\n\nMeta-Equivalence Classes:\n"), err );
4565	out_str_dec( C_int_decl, "yy_meta", numecs + 1 );
5482	printf( fmt, str, n );
5483	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5484	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5485	}
4566	for ( i = 1; i <= numecs; ++i ){
4567	if ( trace ) fprintf( err, "%d = %d\n", i, ((tecbck[i]) < 0 ? -(tecbck[i]) : (tecbck[i])) );
4569	mkdata( ((tecbck[i]) < 0 ? -(tecbck[i]) : (tecbck[i])) );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4571	dataend();
5204	if ( datapos > 0 ) dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5206	outn( "    } ;\n" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5207	dataline = 0;
5208	datapos = 0;
5209	}
4573	total_states = lastdfa + numtemps;
4574	out_str_dec( (tblend >= 32700 || long_align) ? C_long_decl : C_short_decl, "yy_base", total_states + 1 );
5482	printf( fmt, str, n );
5483	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5484	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5485	}
4575	for ( i = 1; i <= lastdfa; ++i ){
4576	register int d = def[i];
4577	if ( base[i] == -32766 ) base[i] = jambase;
4579	if ( d == -32766 ) def[i] = jamstate;
4582	if ( d < 0 ){
4583	++tmpuses;
4584	def[i] = lastdfa - d + 1;
4586	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4576	register int d = def[i];
4577	if ( base[i] == -32766 ) base[i] = jambase;
4579	if ( d == -32766 ) def[i] = jamstate;
4582	if ( d < 0 ){
4583	++tmpuses;
4584	def[i] = lastdfa - d + 1;
4586	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4576	register int d = def[i];
4577	if ( base[i] == -32766 ) base[i] = jambase;
4579	if ( d == -32766 ) def[i] = jamstate;
4582	if ( d < 0 ){
4583	++tmpuses;
4584	def[i] = lastdfa - d + 1;
4586	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4576	register int d = def[i];
4577	if ( base[i] == -32766 ) base[i] = jambase;
4579	if ( d == -32766 ) def[i] = jamstate;
4582	if ( d < 0 ){
4583	++tmpuses;
4584	def[i] = lastdfa - d + 1;
4586	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4576	register int d = def[i];
4577	if ( base[i] == -32766 ) base[i] = jambase;
4579	if ( d == -32766 ) def[i] = jamstate;
4586	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4576	register int d = def[i];
4577	if ( base[i] == -32766 ) base[i] = jambase;
4579	if ( d == -32766 ) def[i] = jamstate;
4586	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4588	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4589	for ( ++i ; i <= total_states; ++i ){
4590	mkdata( base[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4591	def[i] = jamstate;
4593	dataend();
5204	if ( datapos > 0 ) dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5206	outn( "    } ;\n" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5207	dataline = 0;
5208	datapos = 0;
5209	}
4594	out_str_dec( (total_states >= 32700 || long_align) ? C_long_decl : C_short_decl, "yy_def", total_states + 1 );
5482	printf( fmt, str, n );
5483	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5484	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5485	}
4595	for ( i = 1; i <= total_states; ++i ) mkdata( def[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4597	dataend();
5204	if ( datapos > 0 ) dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5206	outn( "    } ;\n" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5207	dataline = 0;
5208	datapos = 0;
5209	}
4598	out_str_dec( (total_states >= 32700 || long_align) ? C_long_decl : C_short_decl, "yy_nxt", tblend + 1 );
5482	printf( fmt, str, n );
5483	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5484	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5485	}
4599	for ( i = 1; i <= tblend; ++i ){
4600	if ( chk[i] == 0 || nxt[i] == 0 ) nxt[i] = jamstate;
4602	mkdata( nxt[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4600	if ( chk[i] == 0 || nxt[i] == 0 ) nxt[i] = jamstate;
4602	mkdata( nxt[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4600	if ( chk[i] == 0 || nxt[i] == 0 ) nxt[i] = jamstate;
4602	mkdata( nxt[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4600	if ( chk[i] == 0 || nxt[i] == 0 ) nxt[i] = jamstate;
4602	mkdata( nxt[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4604	dataend();
5204	if ( datapos > 0 ) dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5206	outn( "    } ;\n" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5207	dataline = 0;
5208	datapos = 0;
5209	}
4605	out_str_dec( (total_states >= 32700 || long_align) ? C_long_decl : C_short_decl, "yy_chk", tblend + 1 );
5482	printf( fmt, str, n );
5483	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5484	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5485	}
4606	for ( i = 1; i <= tblend; ++i ){
4607	if ( chk[i] == 0 ) ++nummt;
4609	mkdata( chk[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4607	if ( chk[i] == 0 ) ++nummt;
4609	mkdata( chk[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4607	if ( chk[i] == 0 ) ++nummt;
4609	mkdata( chk[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4607	if ( chk[i] == 0 ) ++nummt;
4609	mkdata( chk[i] );
5320	if ( datapos >= 10 ){
5324	if ( datapos == 0 ) out( "    " );
5326	else outc( ',' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5327	++datapos;
5328	out_dec( "%5d", value );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
5329	}
4611	dataend();
5204	if ( datapos > 0 ) dataflush();
5212	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
5213	if ( ++dataline >= 10 ){
5217	datapos = 0;
5218	}
5206	outn( "    } ;\n" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5207	dataline = 0;
5208	datapos = 0;
5209	}
4612	}
4681	if ( num_backing_up > 0 && ! reject ){
4682	if ( ! C_plus_plus ){
4683	indent_puts( "static yy_state_type yy_last_accepting_state;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4684	indent_puts( "static char *yy_last_accepting_cpos;\n" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4687	if ( nultrans ){
4696	if ( ddebug ){
4706	if ( reject ){
4736	outn( "/* The intent behind this definition is that it'll catch" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4737	outn( " * any uses of REJECT which flex missed." );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4738	outn( " */" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4739	outn( "#define REJECT reject_used_but_not_detected" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4741	if ( yymore_used ){
4775	indent_puts( "#define yymore() yymore_used_but_not_detected" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4776	indent_puts( "#define YY_MORE_ADJ 0" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4778	if ( ! C_plus_plus ){
4779	if ( yytext_is_array ){
4786	else outn( "char *yytext;" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4788	out( &action_array[defs1_offset] );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
4789	line_directive_out(   stdout  , 0 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5278	if ( output_file ==   stdout   ) ++out_linenum;
5284	sprintf( directive, line_fmt, out_linenum, filename );
5286	if ( output_file ){
5287	fputs( directive, output_file );
5290	}
4794	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4795	if ( ! C_plus_plus ){
4796	if ( use_read ){
4802	outn( "\tif ( yy_current_buffer->yy_is_interactive ) \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4803	outn( "\t\t{ \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4804	outn( "\t\tint c = '*', n; \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4805	outn( "\t\tfor ( n = 0; n < max_size && \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4806	outn( "\t\t\t     (c = getc( yyin )) != EOF && c != '\\n'; ++n ) \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4807	outn( "\t\t\tbuf[n] = (char) c; \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4808	outn( "\t\tif ( c == '\\n' ) \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4809	outn( "\t\t\buf[n++] = (char) c; \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4810	outn( "\t\tif ( c == EOF && ferror( yyin ) ) \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4811	outn( "\t\t\tYY_FATAL_ERROR( \"input in flex scanner failed\" ); \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4812	outn( "\t\tresult = n; \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4813	outn( "\t\t} \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4814	outn( "\telse if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4815	outn( "\t\t  && ferror( yyin ) ) \\" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4816	outn( "\t\tYY_FATAL_ERROR( \"input in flex scanner failed\" );" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4819	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4820	indent_puts( "#define YY_RULE_SETUP \\" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4821	(++indent_level);
4822	if ( bol_needed ){
4829	indent_puts( "YY_USER_ACTION" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4830	(--indent_level);
4831	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4832	out( &action_array[prolog_offset] );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
4833	line_directive_out(   stdout  , 0 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5278	if ( output_file ==   stdout   ) ++out_linenum;
5284	sprintf( directive, line_fmt, out_linenum, filename );
5286	if ( output_file ){
5287	fputs( directive, output_file );
5290	}
4838	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4839	indent_level = 2;
4840	if ( yymore_used || yytext_is_array ){
4850	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4851	gen_start_state();
4465	if ( fullspd ){
4473	indent_puts( "yy_current_state = yy_start;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4474	if ( bol_needed ) indent_puts( "yy_current_state += YY_AT_BOL();" );
4476	if ( reject ){
4852	outn( "yy_match:" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4853	gen_next_match();
4316	char *char_map = useecs ? "yy_ec[YY_SC_TO_UI(*yy_cp)]" :
4319	char *char_map_2 = useecs ? "yy_ec[YY_SC_TO_UI(*++yy_cp)]" :
4322	if ( fulltbl ){
4338	if ( fullspd ){
4360	indent_puts( "do" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4361	(++indent_level);
4362	indent_puts( "{" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4363	gen_next_state( 0 );
4379	{
4381	if ( worry_about_NULs && ! nultrans ){
4386	else strcpy( char_map, useecs ? "yy_ec[YY_SC_TO_UI(*yy_cp)]" : "YY_SC_TO_UI(*yy_cp)" );
4387	if ( worry_about_NULs && nultrans ){
4394	if ( fulltbl ) indent_put2s( "yy_current_state = yy_nxt[yy_current_state][%s];", char_map );
4397	if ( fullspd ) indent_put2s( "yy_current_state += yy_current_state[%s].yy_nxt;", char_map );
4399	else gen_next_compressed_state( char_map );
4297	indent_put2s( "register YY_CHAR yy_c = %s;", char_map );
4616	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4617	out_str( fmt, arg );
5465	printf( fmt, str );
5466	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5467	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5468	}
4618	outn( "" );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
4619	}
4298	gen_backing_up();
4069	if ( reject || num_backing_up == 0 ) return;
4071	if ( fullspd ) indent_puts( "if ( yy_current_state[-1].yy_nxt )" );
4073	else indent_puts( "if ( yy_accept[yy_current_state] )" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4074	(++indent_level);
4075	indent_puts( "{" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4076	indent_puts( "yy_last_accepting_state = yy_current_state;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4077	indent_puts( "yy_last_accepting_cpos = yy_cp;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4078	indent_puts( "}" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4079	(--indent_level);
4080	}
4299	indent_puts( "while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4300	(++indent_level);
4301	indent_puts( "{" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4302	indent_puts( "yy_current_state = (int) yy_def[yy_current_state];" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4303	if ( usemecs ){
4304	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4305	out_dec( "if ( yy_current_state >= %d )\n", lastdfa + 2 );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
4306	(++indent_level);
4307	indent_puts( "yy_c = yy_meta[(unsigned int) yy_c];" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4308	(--indent_level);
4310	indent_puts( "}" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4311	(--indent_level);
4312	indent_puts( "yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4313	}
4400	if ( worry_about_NULs && nultrans ){
4408	if ( fullspd || fulltbl ) gen_backing_up();
4410	if ( reject ) indent_puts( "*yy_state_ptr++ = yy_current_state;" );
4412	}
4364	indent_puts( "++yy_cp;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4365	indent_puts( "}" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4366	(--indent_level);
4367	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4368	if ( interactive ) out_dec( "while ( yy_base[yy_current_state] != %d );\n", jambase );
4370	else out_dec( "while ( yy_current_state != %d );\n", jamstate );
5436	printf( fmt, n );
5437	out_line_count( fmt );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5438	}
4371	if ( ! reject && ! interactive ){
4372	indent_puts( "yy_cp = yy_last_accepting_cpos;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4373	indent_puts( "yy_current_state = yy_last_accepting_state;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4854	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4855	indent_level = 2;
4856	gen_find_action();
4190	if ( fullspd ) indent_puts( "yy_act = yy_current_state[-1].yy_nxt;" );
4193	if ( fulltbl ) indent_puts( "yy_act = yy_accept[yy_current_state];" );
4196	if ( reject ){
4265	indent_puts( "yy_act = yy_accept[yy_current_state];" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4266	if ( interactive && ! reject ){
4857	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4858	if ( do_yylineno ){
4873	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4874	if ( ddebug ){
4930	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4931	(++indent_level);
4932	gen_bu_action();
4083	if ( reject || num_backing_up == 0 ) return;
4085	indent_level = 3;
4086	indent_puts( "case 0: /* must back up */" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4087	indent_puts( "/* undo the effects of YY_DO_BEFORE_ACTION */" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4088	indent_puts( "*yy_cp = yy_hold_char;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4089	if ( fullspd || fulltbl ) indent_puts( "yy_cp = yy_last_accepting_cpos + 1;" );
4091	else indent_puts( "yy_cp = yy_last_accepting_cpos;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4092	indent_puts( "yy_current_state = yy_last_accepting_state;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4093	indent_puts( "goto yy_find_action;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4094	outc( '\n' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4095	indent_level = 0;
4096	}
4933	out( &action_array[action_offset] );
5425	fputs( str,   stdout   );
5430	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5431	}
4934	line_directive_out(   stdout  , 0 );
5256	{
5260	if ( ! gen_line_dirs ) return;
5262	if ( (do_infile && ! infilename) || (! do_infile && ! outfilename) ) return;
5264	s1 = do_infile ? infilename : outfilename;
5265	s2 = filename;
5266	s3 = &filename[sizeof( filename ) - 2];
5267	while ( s2 < s3 && *s1 ) {
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5269	if ( *s1 == '\\' ) *s2++ = '\\';
5271	*s2++ = *s1++;
5273	*s2 = '\0';
5274	if ( do_infile ) sprintf( directive, line_fmt, linenum, filename );
5278	if ( output_file ==   stdout   ) ++out_linenum;
5284	sprintf( directive, line_fmt, out_linenum, filename );
5286	if ( output_file ){
5287	fputs( directive, output_file );
5290	}
4939	for ( i = 1; i <= lastsc; ++i )
4940	if ( ! sceof[i] ){
4940	if ( ! sceof[i] ){
4946	if ( did_eof_rule ){
4951	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5566	return;
5587	}
4952	indent_level = 4;
4953	if ( fullspd || fulltbl ) indent_puts( "yy_cp = yy_c_buf_p;" );
4957	if ( ! reject && ! interactive ){
4958	indent_puts( "yy_cp = yy_last_accepting_cpos;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4959	indent_puts( "yy_current_state = yy_last_accepting_state;" );
4623	do_indent();
4055	register int i = indent_level * 8;
4056	while ( i >= 8 ) {
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4058	outc( '\t' );
5490	_IO_putc (  c  , stdout)  ;
5497	if ( c == '\n' ) ++out_linenum;
5499	}
4059	i -= 8;
4061	while ( i > 0 ) {
4066	}
4624	outn( str );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
4625	}
4963	indent_level = 1;
4964	skelout();
5549	void skelout() {
5552	char *buf = buf_storage;
5553	int do_copy = 1;
5554	while ( skelfile ? (fgets( buf, 2048, skelfile ) !=   ((void *)0)  ) :
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5571	do_copy = ! C_plus_plus;
5572	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5568	do_copy = C_plus_plus;
5569	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5563	switch ( buf[1] ) {
5574	do_copy = 1;
5575	break;
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5461	}
5505	++out_linenum;
5506	}
5560	((buf = (char *) skel[skel_ind++]) != 0) ) {
5562	if ( buf[0] == '%' ){
5581	if ( do_copy ){
5582	if ( skelfile ) out( buf );
5584	else outn( buf );
5503	puts( str );
5504	out_line_count( str );
5457	for ( i = 0; str[i]; ++i )
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
5458	if ( str[i] == '\n' ) ++out_linenum;
